{"ts":1368976764173,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class AppsController < ApplicationController\n  before_filter :require_dashboard_access, :except => [:purge_test_data]\n\n  # GET /apps\n  # GET /apps.json\n  def index\n    @apps = current_developer.apps\n\n    respond_to do |format|\n      format.html # index.html.erb\n      format.json { render json: @apps }\n    end\n  end\n\n  # GET /apps/1\n  # GET /apps/1.json\n  def show\n    @app = current_developer.apps.find(params[:id].to_s)\n\n    respond_to do |format|\n      format.html # show.html.erb\n      format.json { render json: @app }\n    end\n  end\n\n  # GET /apps/new\n  # GET /apps/new.json\n  def new\n    @app = current_developer.apps.build\n\n    respond_to do |format|\n      format.html # new.html.erb\n      format.json { render json: @app }\n    end\n  end\n\n  # GET /apps/1/edit\n  def edit\n    @app = current_developer.apps.find(params[:id].to_s)\n  end\n\n  # POST /apps\n  # POST /apps.json\n  def create\n    params[:app].delete :developer_id\n    @app = current_developer.apps.build(params[:app])\n\n    respond_to do |format|\n      if @app.save\n        format.html { redirect_to @app, notice: 'App was successfully created.' }\n        format.json { render json: @app, status: :created, location: @app }\n      else\n        format.html { render action: \"new\" }\n        format.json { render json: @app.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PUT /apps/1\n  # PUT /apps/1.json\n  def update\n    @app = current_developer.apps.find(params[:id].to_s)\n\n    respond_to do |format|\n      if @app.update_attributes(params[:app])\n        format.html { redirect_to @app, notice: 'App was successfully updated.' }\n        format.json { head :no_content }\n      else\n        format.html { render action: \"edit\" }\n        format.json { render json: @app.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /apps/1\n  # DELETE /apps/1.json\n  def destroy\n    @app = current_developer.apps.find(params[:id].to_s)\n    @app.destroy\n\n    respond_to do |format|\n      format.html { redirect_to apps_url }\n      format.json { head :no_content }\n    end\n  end\n\n  def purge_test_data\n    test_app = App.find_by_app_key(\"end_to_end_test\")\n    if test_app\n      test_app.leaderboards.destroy_all\n      test_app.achievements.destroy_all\n      render json: %|{\"ok\":true}|\n    else\n      render json: %|{\"ok\":false}|\n    end\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":2339}]],"length":2339}
{"contributors":[],"silentsave":false,"ts":1368976817179,"patch":[[{"diffs":[[0,"t_data]\n"],[1,"  before_filter :set_headers\n\n\n  private\n  def set_headers\n    headers['Access-Control-Allow-Origin'] = '*'\n    headers['Access-Control-Expose-Headers'] = 'ETag'\n    headers['Access-Control-Allow-Methods'] = 'GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD'\n    headers['Access-Control-Allow-Headers'] = '*,x-requested-with,Content-Type,If-Modified-Since,If-None-Match'\n    headers['Access-Control-Max-Age'] = '86400'\n  end\n  "],[0,"\n  # GET"]],"start1":110,"start2":110,"length1":16,"length2":439}]],"length":2762,"saved":false}
