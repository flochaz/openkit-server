{"ts":1368976108754,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class LeaderboardsController < ApplicationController\n  before_filter :require_dashboard_or_api_access, :only   => [:index, :create]\n  before_filter :require_dashboard_access,        :except => [:index, :create]\n  before_filter :set_app\n\n\n  def index\n    @leaderboards = @app.leaderboards\n    respond_to do |format|\n      format.html\n      format.json { render json: @leaderboards.map {|x| x.api_fields(request_base_uri)} }\n    end\n  end\n\n  # Dash only\n  def show\n    @leaderboard = @app.leaderboards.find(params[:id].to_i)\n    @top_scores = Score.bests_for('all_time', @leaderboard.id)\n    ActiveRecord::Associations::Preloader.new(@top_scores, [:user]).run\n\n    respond_to do |format|\n      format.html # show.html.erb\n      format.json { render json: @leaderboard.api_fields(request_base_uri) }\n    end\n  end\n\n  # Dash only\n  def new\n    @leaderboard = @app.leaderboards.build\n\n    respond_to do |format|\n      format.html # new.html.erb\n      format.json { render json: @leaderboard.api_fields(request_base_uri) }\n    end\n  end\n\n  # Dash only\n  def edit\n    @leaderboard = @app.leaderboards.find(params[:id].to_i)\n  end\n\n  def create\n    @leaderboard = @app.leaderboards.new(params[:leaderboard])\n\n    respond_to do |format|\n      if @leaderboard.save\n        format.html { redirect_to [@app, @leaderboard], notice: 'Leaderboard was successfully created.' }\n        format.json { render json: @leaderboard.api_fields(request_base_uri), status: :created, location: [@app, @leaderboard] }\n      else\n        format.html { render action: \"new\" }\n        format.json { render json: @leaderboard.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # Dash only\n  def update\n    params[:leaderboard].delete(:app_id)\n    @leaderboard = @app.leaderboards.find(params[:id].to_i)\n\n    respond_to do |format|\n      if @leaderboard.update_attributes(params[:leaderboard])\n        format.html { redirect_to [@app, @leaderboard], notice: 'Leaderboard was successfully updated.' }\n        format.json { head :no_content }\n      else\n        format.html { render action: \"edit\" }\n        format.json { render json: @leaderboard.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # Dash only\n  def destroy\n    @leaderboard = @app.leaderboards.find_by_id(params[:id].to_i)\n    if @leaderboard\n      @leaderboard.destroy\n      notice = \"Destroyed leaderboard.\"\n    else\n      notice = \"Leaderboard doesn't exist.\"\n    end\n\n    respond_to do |format|\n      format.html { redirect_to app_leaderboards_url(@app), notice: notice }\n      format.json { head :no_content }\n    end\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":2598}]],"length":2598}
