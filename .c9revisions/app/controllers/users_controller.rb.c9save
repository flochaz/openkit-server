{"ts":1368982514456,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class UsersController < ApplicationController\n  before_filter :require_dashboard_access,  :except => [:new, :create, :update]\n  before_filter :require_api_access,        :only   => [:new, :create, :update]\n\n  # GET /users\n  # GET /users.json\n  def index\n    @users = User.all\n\n    respond_to do |format|\n      format.html # index.html.erb\n      format.json { render json: @users }\n    end\n  end\n\n  # GET /users/1\n  # GET /users/1.json\n  def show\n    @user = User.find(params[:id].to_i)\n\n    respond_to do |format|\n      format.html # show.html.erb\n      format.json { render json: @user }\n    end\n  end\n\n  # GET /users/new\n  # GET /users/new.json\n  def new\n    @user = User.new\n\n    respond_to do |format|\n      format.html # new.html.erb\n      format.json { render json: @user }\n    end\n  end\n\n  # GET /users/1/edit\n  def edit\n    @user = User.find(params[:id].to_i)\n  end\n\n  # POST /users\n  # POST /users.json\n  def create\n        posted_data = params[:user]\n\tputs \"RAW DATA : #{posted_data}\"\n    err_message = nil  \n\n    @user = current_app.find_or_create_subscribed_user(params[:user])\n    err_message = \"Could not create that user.\" if @user.nil?\n    err_message = \"Couldn't subscribe user because:#{@user.errors.full_messages[0]}\" if @user.errors.count != 0\n\n    if !err_message\n      render json: @user, status: :created, location: @user\n    else\n      render status: :bad_request, json: {message: err_message}\n    end\n  end\n\n  # PUT /users/1\n  # PUT /users/1.json\n  def update\n    @user = User.find(params[:id].to_i)\n\n    respond_to do |format|\n      if @user.update_attributes(params[:user])\n        format.html { redirect_to @user, notice: 'User was successfully updated.' }\n        #format.json { head :no_content }\n        format.json { render json: @user, status: :ok, location: @user }\n      else\n        format.html { render action: \"edit\" }\n        format.json { render json: @user.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /users/1\n  # DELETE /users/1.json\n  def destroy\n    @user = User.find(params[:id].to_i)\n    @user.destroy\n\n    respond_to do |format|\n      format.html { redirect_to users_url }\n      format.json { head :no_content }\n    end\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":2209}]],"length":2209}
